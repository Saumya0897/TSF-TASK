# Prediction using supervised machine learning model

# Importing libraries

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Importing dataset

url = "http://bit.ly/w-data "
dataset=pd.read_csv(url)
X = dataset.iloc[:, 0:1].values
Y = dataset.iloc[:, 1].values


# Splitting the dataset into Training set and Test set

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 0)


# Fitting Simple Linear Regression to the training set

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, Y_train)


# Predecting the Test set result

Y_pred = regressor.predict([[9.25]])
print(Y_pred)

# Visualising the Training set result

plt.scatter(X_train, Y_train, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.title('Predicted Score(Training set)')
plt.xlabel('No. of Hours')
plt.ylabel('Score')
plt.show()

# Visualising the Test set result

plt.scatter(X_test, Y_test, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.title('Predicted Score(Test set)')
plt.xlabel('No. of Hours')
plt.ylabel('Score')
plt.show()
